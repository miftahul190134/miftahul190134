{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Tentang Biodata Nama : Moch. Miftahul Huda F. NIM : 190411100134 Kelas : Komputasi Numerik C Dosen : MULA'AB, S.Si., M.Kom Komputasi Numerik Komputasi numerik merupakan metode numerik yang memanfaatkan bahasa pemrograman komputer untuk melakukan iterasi perhitungan numerik yang tidak dapat diselesaikan secara manual Note Konten diupdate berdasarkan tugas per minggunya","title":"Tentang"},{"location":"#tentang","text":"","title":"Tentang"},{"location":"#biodata","text":"Nama : Moch. Miftahul Huda F. NIM : 190411100134 Kelas : Komputasi Numerik C Dosen : MULA'AB, S.Si., M.Kom","title":"Biodata"},{"location":"#komputasi-numerik","text":"Komputasi numerik merupakan metode numerik yang memanfaatkan bahasa pemrograman komputer untuk melakukan iterasi perhitungan numerik yang tidak dapat diselesaikan secara manual Note Konten diupdate berdasarkan tugas per minggunya","title":"Komputasi Numerik"},{"location":"turunan-numerik/1.%20teori/","text":"Teori Turunan Turunan / differensial adalah suatu cara pengukuran terhadap perubahan yang terjadi pada fungsi yang diakibatkan oleh perubahan suatu variabel; contohnya perbedaan antara kecepatan dan waktu, garis singgung, dan sebagainya. 1 Turunan dapat dihitung menggunakan konsep limit yang dapat didefinisikan dengan rumus di bawah ini, \\[ f'(x) = \\lim_{h \\to 0} (\\frac{f(x+h)-f(x)}{h}) \\] Dimana v fungsi dengan satu variabel bebas, dan u fungsi dengan lebih dari satu variabel bebas. Turunan dapat didefinisikan dengan menambahkan tanda petik pada fungsi seperti, $$ f', f'', f''', ... $$ Ketika fungsi f(x) tidak diketahui secara explisit dan sulit untuk dihitung maka kita dapat menggunakan pencarian dengan turunan numerik. Turunan Numerik Turunan Numerik merupakan salah satu metode yang digunakan untuk mencari turunan dengan nilai yang tidak dapat dihitung secara manual dikarenakan bentuknya yang rumit dan banyak sekali turunannya. 2 Terdapat 3 pendekatan yang digunakan untuk mencari turunan numerik antara lain: Hampiran Selisih Maju Hampiran Selisih Mundur Hampiran Selisih Pusat Dimana penurunan rumus Turunan dapat dihitung dengan menggunakan metode Deret Taylor Polinom Interpolasi Penggunaan turunan numerik dapat digunakan untuk mencari edge pada pengolahan citra sebuah gambar atau cctv secara realtime. Pembahasan mengenai algoritma dan kode dibahas pada halaman berikutnya Referensi Wikipedia Turunan \u21a9 Materi Kuliah Komputasi Numerik ITB Prof. Rinaldi Munir \u21a9","title":"Teori"},{"location":"turunan-numerik/1.%20teori/#teori","text":"","title":"Teori"},{"location":"turunan-numerik/1.%20teori/#turunan","text":"Turunan / differensial adalah suatu cara pengukuran terhadap perubahan yang terjadi pada fungsi yang diakibatkan oleh perubahan suatu variabel; contohnya perbedaan antara kecepatan dan waktu, garis singgung, dan sebagainya. 1 Turunan dapat dihitung menggunakan konsep limit yang dapat didefinisikan dengan rumus di bawah ini, \\[ f'(x) = \\lim_{h \\to 0} (\\frac{f(x+h)-f(x)}{h}) \\] Dimana v fungsi dengan satu variabel bebas, dan u fungsi dengan lebih dari satu variabel bebas. Turunan dapat didefinisikan dengan menambahkan tanda petik pada fungsi seperti, $$ f', f'', f''', ... $$ Ketika fungsi f(x) tidak diketahui secara explisit dan sulit untuk dihitung maka kita dapat menggunakan pencarian dengan turunan numerik.","title":"Turunan"},{"location":"turunan-numerik/1.%20teori/#turunan-numerik","text":"Turunan Numerik merupakan salah satu metode yang digunakan untuk mencari turunan dengan nilai yang tidak dapat dihitung secara manual dikarenakan bentuknya yang rumit dan banyak sekali turunannya. 2 Terdapat 3 pendekatan yang digunakan untuk mencari turunan numerik antara lain: Hampiran Selisih Maju Hampiran Selisih Mundur Hampiran Selisih Pusat Dimana penurunan rumus Turunan dapat dihitung dengan menggunakan metode Deret Taylor Polinom Interpolasi Penggunaan turunan numerik dapat digunakan untuk mencari edge pada pengolahan citra sebuah gambar atau cctv secara realtime. Pembahasan mengenai algoritma dan kode dibahas pada halaman berikutnya","title":"Turunan Numerik"},{"location":"turunan-numerik/1.%20teori/#referensi","text":"Wikipedia Turunan \u21a9 Materi Kuliah Komputasi Numerik ITB Prof. Rinaldi Munir \u21a9","title":"Referensi"},{"location":"turunan-numerik/2.%20algoritma/","text":"Algoritma Hampiran Selisih Maju Hampiran selisih maju mencari turunan yaitu mencari kemiringan garis (gradien) dengan mengambil selisih yang ada di depannya yang ditunjukkan pada gambar di bawah ini 1 dimana x0 - x1 dapat diganti dengan h \\[ (\\frac{y_1-y_0}{x_0-x_1}) = (\\frac{f_1-f_0}{h}) \\] Rumus Dasar \\[ f'(x_0) = (\\frac{f(x_o+h)-f(x_0)}{h}) = (\\frac{f_1-f_0}{h}) \\] h -> 0 (h mendekati 0) agar error relatifnya kecil juga, untuk mencari errornya dapat dilakukan dengan menghitung seperti rumus di bawah ini, yaitu melakukan pembagian antara turunan eksak (sebenarnya) dengan turunan maju \\[ E(f) = -(\\frac{1}{2})hf'(x) \\] Algoritma Deret Taylor Menjabarkan turunan sesuai dengan deret taylor, dimana diketahui bahwa rumus dasar dari deret taylor adalah seperti ini \\[ \\sum_{k=0}^\\infty \\frac{f^{(n)}(a)}{n!} (x-a)^n \\] Sehingga untuk mencari hampiran selisih maju dengan deret taylor akan menjadi seperti ini, \\[ f(x_{i+1}) = f(x_i) + \\frac{x_{i+1}-x_i}{1!} f'(x_i) + \\frac{(x_{i+1}-x_i)^2}{2!} f''(x_i)+.. \\] Rumus di atas apabila diteruskan akan mendapatkan hasil seperti berikut, \\[ O(h) = h/2 f'' (t), x_i<t<x_{i+1} \\] Untuk nilai f di x0 dan x1 menjadi dimana O(h) merupakan orde errornya yang tergantung nilai dari h yang merupakan galat pemotongan dari f sebelumnya. Berikut adalah rumus turunan pertama selisih maju dengan deret taylor \\[ f0' = \\frac{f_1 - f_0}{h} + O(h) \\] Polinom Interpolasi Polinom newton-gregory dapat digunakan untuk menyelesaikan permasalahan turunan numerik yang memiliki titik-titik yang berjarak sama sehingga rumus yang dipakai lebih sederhana dibandingkan polinom interpolasi yang lain. Berikut ini adalah polino newton-gregory untuk selisih maju pada turunan pertama \\[ f'(x_0) = \\frac{3f_0 + 4f_1 - f_2}{2h} \\] Hampiran Selisih Mundur Hampiran selisih mundur mencari turunan yaitu mencari kemiringan garis (gradien) dengan mengambil selisih yang ada di belakangnya / bawahnya yang ditunjukkan pada gambar di bawah ini Rumus Dasar \\[ f'(x_0) = (\\frac{f(x_o)-f(x_0+h)}{h}) = (\\frac{f_0-f_1}{h}) \\] Algoritma Deret Taylor Sama halnya dengan step selisih maju, namun rumus untuk mencari hampiran selisih mundur dengan deret taylor terdapat perubahan yaitu dimulai dari yang terakhir sampai yang awal \\[ f(x_{i-1}) = f(x_i) + \\frac{x_{i+1}-x_i}{1!} f'(x_i) + \\frac{(x_{i+1}-x_i)^2}{2!} f''(x_i)+.. \\] Rumus di atas apabila diteruskan akan mendapatkan hasil seperti berikut, \\[ O(h) = -h/2 f'' (t), x_{i-1}<t<x_{i} \\] Sehingga rumus untuk turunan pertama selisih mundur dengan deret taylor yaitu, $$ f0' = (\\frac{f_0-f_1}{h}) + O(h) $$ Polinom Interpolasi Polinom newton-gregory dapat digunakan untuk menyelesaikan permasalahan turunan numerik yang memiliki titik-titik yang berjarak sama sehingga rumus yang dipakai lebih sederhana dibandingkan polinom interpolasi yang lain. Berikut ini adalah polino newton-gregory untuk selisih maju untuk titik-titik x0 & x-1 pada turunan pertama \\[ f'\\left( x_{0}\\right) =1/h\\left( \\nabla f\\circ \\right) =\\dfrac{f_{0}-f_{-1}}{h} \\] Hampiran Selisih Pusat Hampiran selisih pusat mencari turunan yaitu mencari kemiringan garis (gradien) dengan mencari gabungan dari selisih maju dan selisih mundur. Rumus Dasar \\[ f'(x_0) = (\\frac{f(x_o+h)-f(x_o-h)}{2h}) = (\\frac{f_1-f_{-1}}{2h}) \\] Algoritma Deret Taylor Perhitungan dengan menggunakan rumus mengurangkan persamaan maju dan mundur, yang dapat dilihat dari rumus di bawah ini \\[ f(x_{i+1})-f(x_{i-1}) = 2hf'_i + h^3/3 fi'' + ... \\] Rumus di atas apabila diteruskan akan mendapatkan hasil seperti berikut, \\[ O(h^2) = -h/6 f'''(t), x_{i-1}<t<x_{i+1} \\] Sehingga rumus turunan pertama untuk selisih pusat , $$ f0' = (\\frac{f_1-f_{-1}}{2h}) + O(h^2) $$ Polinom Interpolasi Polinom newton-gregory dapat digunakan untuk menyelesaikan permasalahan turunan numerik yang memiliki titik-titik yang berjarak sama sehingga rumus yang dipakai lebih sederhana dibandingkan polinom interpolasi yang lain. Berikut ini adalah polino newton-gregory untuk selisih pusat untuk titik-titik x-1, x0, dan x1 pada turunan pertama \\[ f'\\left( x_{0}\\right) =\\dfrac{f_{1}-f_{-1}}{2h} \\] Referensi Materi Kuliah Komputasi Numerik ITB Prof. Rinaldi Munir \u21a9","title":"Algoritma"},{"location":"turunan-numerik/2.%20algoritma/#algoritma","text":"","title":"Algoritma"},{"location":"turunan-numerik/2.%20algoritma/#hampiran-selisih-maju","text":"Hampiran selisih maju mencari turunan yaitu mencari kemiringan garis (gradien) dengan mengambil selisih yang ada di depannya yang ditunjukkan pada gambar di bawah ini 1 dimana x0 - x1 dapat diganti dengan h \\[ (\\frac{y_1-y_0}{x_0-x_1}) = (\\frac{f_1-f_0}{h}) \\]","title":"Hampiran Selisih Maju"},{"location":"turunan-numerik/2.%20algoritma/#rumus-dasar","text":"\\[ f'(x_0) = (\\frac{f(x_o+h)-f(x_0)}{h}) = (\\frac{f_1-f_0}{h}) \\] h -> 0 (h mendekati 0) agar error relatifnya kecil juga, untuk mencari errornya dapat dilakukan dengan menghitung seperti rumus di bawah ini, yaitu melakukan pembagian antara turunan eksak (sebenarnya) dengan turunan maju \\[ E(f) = -(\\frac{1}{2})hf'(x) \\]","title":"Rumus Dasar"},{"location":"turunan-numerik/2.%20algoritma/#algoritma_1","text":"","title":"Algoritma"},{"location":"turunan-numerik/2.%20algoritma/#deret-taylor","text":"Menjabarkan turunan sesuai dengan deret taylor, dimana diketahui bahwa rumus dasar dari deret taylor adalah seperti ini \\[ \\sum_{k=0}^\\infty \\frac{f^{(n)}(a)}{n!} (x-a)^n \\] Sehingga untuk mencari hampiran selisih maju dengan deret taylor akan menjadi seperti ini, \\[ f(x_{i+1}) = f(x_i) + \\frac{x_{i+1}-x_i}{1!} f'(x_i) + \\frac{(x_{i+1}-x_i)^2}{2!} f''(x_i)+.. \\] Rumus di atas apabila diteruskan akan mendapatkan hasil seperti berikut, \\[ O(h) = h/2 f'' (t), x_i<t<x_{i+1} \\] Untuk nilai f di x0 dan x1 menjadi dimana O(h) merupakan orde errornya yang tergantung nilai dari h yang merupakan galat pemotongan dari f sebelumnya. Berikut adalah rumus turunan pertama selisih maju dengan deret taylor \\[ f0' = \\frac{f_1 - f_0}{h} + O(h) \\]","title":"Deret Taylor"},{"location":"turunan-numerik/2.%20algoritma/#polinom-interpolasi","text":"Polinom newton-gregory dapat digunakan untuk menyelesaikan permasalahan turunan numerik yang memiliki titik-titik yang berjarak sama sehingga rumus yang dipakai lebih sederhana dibandingkan polinom interpolasi yang lain. Berikut ini adalah polino newton-gregory untuk selisih maju pada turunan pertama \\[ f'(x_0) = \\frac{3f_0 + 4f_1 - f_2}{2h} \\]","title":"Polinom Interpolasi"},{"location":"turunan-numerik/2.%20algoritma/#hampiran-selisih-mundur","text":"Hampiran selisih mundur mencari turunan yaitu mencari kemiringan garis (gradien) dengan mengambil selisih yang ada di belakangnya / bawahnya yang ditunjukkan pada gambar di bawah ini","title":"Hampiran Selisih Mundur"},{"location":"turunan-numerik/2.%20algoritma/#rumus-dasar_1","text":"\\[ f'(x_0) = (\\frac{f(x_o)-f(x_0+h)}{h}) = (\\frac{f_0-f_1}{h}) \\]","title":"Rumus Dasar"},{"location":"turunan-numerik/2.%20algoritma/#algoritma_2","text":"","title":"Algoritma"},{"location":"turunan-numerik/2.%20algoritma/#deret-taylor_1","text":"Sama halnya dengan step selisih maju, namun rumus untuk mencari hampiran selisih mundur dengan deret taylor terdapat perubahan yaitu dimulai dari yang terakhir sampai yang awal \\[ f(x_{i-1}) = f(x_i) + \\frac{x_{i+1}-x_i}{1!} f'(x_i) + \\frac{(x_{i+1}-x_i)^2}{2!} f''(x_i)+.. \\] Rumus di atas apabila diteruskan akan mendapatkan hasil seperti berikut, \\[ O(h) = -h/2 f'' (t), x_{i-1}<t<x_{i} \\] Sehingga rumus untuk turunan pertama selisih mundur dengan deret taylor yaitu, $$ f0' = (\\frac{f_0-f_1}{h}) + O(h) $$","title":"Deret Taylor"},{"location":"turunan-numerik/2.%20algoritma/#polinom-interpolasi_1","text":"Polinom newton-gregory dapat digunakan untuk menyelesaikan permasalahan turunan numerik yang memiliki titik-titik yang berjarak sama sehingga rumus yang dipakai lebih sederhana dibandingkan polinom interpolasi yang lain. Berikut ini adalah polino newton-gregory untuk selisih maju untuk titik-titik x0 & x-1 pada turunan pertama \\[ f'\\left( x_{0}\\right) =1/h\\left( \\nabla f\\circ \\right) =\\dfrac{f_{0}-f_{-1}}{h} \\]","title":"Polinom Interpolasi"},{"location":"turunan-numerik/2.%20algoritma/#hampiran-selisih-pusat","text":"Hampiran selisih pusat mencari turunan yaitu mencari kemiringan garis (gradien) dengan mencari gabungan dari selisih maju dan selisih mundur.","title":"Hampiran Selisih Pusat"},{"location":"turunan-numerik/2.%20algoritma/#rumus-dasar_2","text":"\\[ f'(x_0) = (\\frac{f(x_o+h)-f(x_o-h)}{2h}) = (\\frac{f_1-f_{-1}}{2h}) \\]","title":"Rumus Dasar"},{"location":"turunan-numerik/2.%20algoritma/#algoritma_3","text":"","title":"Algoritma"},{"location":"turunan-numerik/2.%20algoritma/#deret-taylor_2","text":"Perhitungan dengan menggunakan rumus mengurangkan persamaan maju dan mundur, yang dapat dilihat dari rumus di bawah ini \\[ f(x_{i+1})-f(x_{i-1}) = 2hf'_i + h^3/3 fi'' + ... \\] Rumus di atas apabila diteruskan akan mendapatkan hasil seperti berikut, \\[ O(h^2) = -h/6 f'''(t), x_{i-1}<t<x_{i+1} \\] Sehingga rumus turunan pertama untuk selisih pusat , $$ f0' = (\\frac{f_1-f_{-1}}{2h}) + O(h^2) $$","title":"Deret Taylor"},{"location":"turunan-numerik/2.%20algoritma/#polinom-interpolasi_2","text":"Polinom newton-gregory dapat digunakan untuk menyelesaikan permasalahan turunan numerik yang memiliki titik-titik yang berjarak sama sehingga rumus yang dipakai lebih sederhana dibandingkan polinom interpolasi yang lain. Berikut ini adalah polino newton-gregory untuk selisih pusat untuk titik-titik x-1, x0, dan x1 pada turunan pertama \\[ f'\\left( x_{0}\\right) =\\dfrac{f_{1}-f_{-1}}{2h} \\]","title":"Polinom Interpolasi"},{"location":"turunan-numerik/2.%20algoritma/#referensi","text":"Materi Kuliah Komputasi Numerik ITB Prof. Rinaldi Munir \u21a9","title":"Referensi"},{"location":"turunan-numerik/3.%20kode/","text":"Kode Program Diketahui, nilai dari beberapa titik sebagai berikut xi f(xi) 0.1 0.5 0.2 0.88 0.3 1.35 0.4 1.89 0.5 2.51 Soal Tentukan turunan numerik pertama dari xi di 0.1, 0.3, 0.5 dengan rumus dasar di metode numerik Jawaban 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 x = [ 0.1 , 0.2 , 0.3 , 0.4 , 0.5 ] f = [ 0.5 , 0.88 , 1.35 , 1.89 , 2.51 ] def turunan_numerik_1 ( bil ): idx = x . index ( bil ) # hampiran selisih maju if ( idx == 0 ): h = ( x [ idx + 1 ] - x [ idx ]) res = ( f [ idx + 1 ] - f [ idx ]) / h res = round ( res , 2 ) print ( \"f'( {0} ) = f( {1} )-f( {2} ) / ( {3} )\" . format ( x [ idx ], x [ idx + 1 ], x [ idx ], h )) print ( \"Hasil dari f'( {0} ) = {1} \" . format ( x [ idx ], res )) # hampiran selisih mundur elif ( idx == x . index ( x [ - 1 ])): h = ( x [ idx - 1 ] - x [ idx - 2 ]) res = ( f [ idx - 1 ] - f [ idx - 2 ]) / h res = round ( res , 2 ) print ( \"f'( {0} ) = f( {1} )-f( {2} ) / ( {3} )\" . format ( x [ idx ], x [ idx - 1 ], x [ idx - 2 ], h )) print ( \"Hasil dari f'( {0} ) = {1} \" . format ( x [ idx ], res )) # hampiran selisih pusat else : h = ( x [ idx + 1 ] - x [ idx - 1 ]) res = ( f [ idx + 1 ] - f [ idx - 1 ]) / ( 2 * h ) res = round ( res , 2 ) print ( \"f'( {0} ) = f( {1} )-f( {2} ) / ( {3} )\" . format ( x [ idx ], x [ idx + 1 ], x [ idx - 1 ], h )) print ( \"Hasil dari f'( {0} ) = {1} \" . format ( x [ idx ], res )) turunan_numerik_1 ( 0.1 ) print ( \"\" ) turunan_numerik_1 ( 0.3 ) print ( \"\" ) turunan_numerik_1 ( 0.5 ) Hasil Running 1 2 3 4 5 6 7 8 f '(0.1) = f(0.2)-f(0.1) / (0.1) Hasil dari f '(0.1) = 4.9 f '(0.4) = f(0.5)-f(0.3) / (0.2) Hasil dari f '(0.4) = 3.2 f '(0.5) = f(0.4)-f(0.3) / (0.10000000000000003) Hasil dari f '(0.5) = 6.1 Penjelasan xi di 0.1 hanya bisa dihitung dengan hampiran selisih maju xi di 0.3 dapat dihitung dengan pusat (gabungan selisih maju dan mundur) xi di 0.5 hanya bisa dihitung dengan hampiran selisih mundur Saya kurang paham mengimplementasikan metode deret taylor dan polinom dengan python, sehingga saya membuat contoh kode untuk rumus dasar dari masing-masing hampiran selisih","title":"Kode"},{"location":"turunan-numerik/3.%20kode/#kode-program","text":"Diketahui, nilai dari beberapa titik sebagai berikut xi f(xi) 0.1 0.5 0.2 0.88 0.3 1.35 0.4 1.89 0.5 2.51 Soal Tentukan turunan numerik pertama dari xi di 0.1, 0.3, 0.5 dengan rumus dasar di metode numerik Jawaban 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 x = [ 0.1 , 0.2 , 0.3 , 0.4 , 0.5 ] f = [ 0.5 , 0.88 , 1.35 , 1.89 , 2.51 ] def turunan_numerik_1 ( bil ): idx = x . index ( bil ) # hampiran selisih maju if ( idx == 0 ): h = ( x [ idx + 1 ] - x [ idx ]) res = ( f [ idx + 1 ] - f [ idx ]) / h res = round ( res , 2 ) print ( \"f'( {0} ) = f( {1} )-f( {2} ) / ( {3} )\" . format ( x [ idx ], x [ idx + 1 ], x [ idx ], h )) print ( \"Hasil dari f'( {0} ) = {1} \" . format ( x [ idx ], res )) # hampiran selisih mundur elif ( idx == x . index ( x [ - 1 ])): h = ( x [ idx - 1 ] - x [ idx - 2 ]) res = ( f [ idx - 1 ] - f [ idx - 2 ]) / h res = round ( res , 2 ) print ( \"f'( {0} ) = f( {1} )-f( {2} ) / ( {3} )\" . format ( x [ idx ], x [ idx - 1 ], x [ idx - 2 ], h )) print ( \"Hasil dari f'( {0} ) = {1} \" . format ( x [ idx ], res )) # hampiran selisih pusat else : h = ( x [ idx + 1 ] - x [ idx - 1 ]) res = ( f [ idx + 1 ] - f [ idx - 1 ]) / ( 2 * h ) res = round ( res , 2 ) print ( \"f'( {0} ) = f( {1} )-f( {2} ) / ( {3} )\" . format ( x [ idx ], x [ idx + 1 ], x [ idx - 1 ], h )) print ( \"Hasil dari f'( {0} ) = {1} \" . format ( x [ idx ], res )) turunan_numerik_1 ( 0.1 ) print ( \"\" ) turunan_numerik_1 ( 0.3 ) print ( \"\" ) turunan_numerik_1 ( 0.5 ) Hasil Running 1 2 3 4 5 6 7 8 f '(0.1) = f(0.2)-f(0.1) / (0.1) Hasil dari f '(0.1) = 4.9 f '(0.4) = f(0.5)-f(0.3) / (0.2) Hasil dari f '(0.4) = 3.2 f '(0.5) = f(0.4)-f(0.3) / (0.10000000000000003) Hasil dari f '(0.5) = 6.1 Penjelasan xi di 0.1 hanya bisa dihitung dengan hampiran selisih maju xi di 0.3 dapat dihitung dengan pusat (gabungan selisih maju dan mundur) xi di 0.5 hanya bisa dihitung dengan hampiran selisih mundur Saya kurang paham mengimplementasikan metode deret taylor dan polinom dengan python, sehingga saya membuat contoh kode untuk rumus dasar dari masing-masing hampiran selisih","title":"Kode Program"}]}